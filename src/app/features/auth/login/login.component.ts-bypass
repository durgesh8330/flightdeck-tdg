import { Component, OnInit } from '@angular/core';
import {Router} from "@angular/router";
import { AppService } from '../../../app.service';
import { environment } from '@env/environment';
import { AuthService, UserService } from '@app/core/services';
import { SessionExpirationAlertService } from '@app/core/session-expiration-alert/session-expiration-alert.service';


@Component({
  selector: 'app-login',
  templateUrl: './login.component.html'
})
export class LoginComponent implements OnInit {

  public userName;
  public password;
  
  errorMsg: string;
  authError: boolean = false;

  constructor(public router: Router, private appService: AppService,
     private sessionTimeoutService: SessionExpirationAlertService,
     private userService:UserService) { }
  
  ngOnInit() {
    console.log('login');
  }

  login(event){
    event.preventDefault();
    
    console.log('on submit');
    const cuid = this.userName;
    const password = this.password;
    this.errorMsg = ''; // reset error message and authError flag
    this.authError = false;
    if (!cuid || !password) {
    	this.authError = true;
        this.errorMsg = 'Please enter valid cuid/password.';
        return;
    }

    let loginData = {"cuid": cuid, "password": password};
    this.appService.obtainAccessToken(loginData).toPromise().then((data: any)=>{
        localStorage.setItem('fd_access_token', data.access_token);
        localStorage.setItem('fd_refresh_token', data.refresh_token);
        localStorage.setItem('fd_user', JSON.stringify(data.user));
        localStorage.setItem('fd_expires_in', data.expires_in);
        // this.appService.checkAuthorization(data.user.cuid).toPromise().then((response: any) => {
        //     const appList = response.profileAppsList;
        //    // if (appList) {
        //         //for (let i = 0; i < appList.length; i++) {
        //             //if (appList[i].profileAppName && (appList[i].profileAppName === 'HOOVER' || appList[i].profileAppName === 'NATIONAL DISPATCH' )) {
                     	this.router.navigate(['/task']);
        //                 localStorage.setItem('fd_profileAppsList', JSON.stringify(appList));
                         this.authError = false;
                         this.sessionTimeoutService.refreshSessionTimeout(localStorage.getItem('fd_expires_in'));
                         this.sessionTimeoutService.setUserActivity();
                         this.userService.subscribeUserInfo();
        //                 //break;
        //             //}
        //             //this.authError = true;
        //         //};
                
        //         if(this.authError == true){
        //             localStorage.removeItem('fd_access_token');
        //             localStorage.removeItem('fd_user'); 
        //             localStorage.removeItem('fd_refresh_token');
        //             localStorage.removeItem('fd_expires_in');
        //             this.errorMsg = cuid + " User does not have access to the apps, please check with Admin.";   
        //         }
        //     // }else {
        //     //     this.authError = true;
        //     //     localStorage.removeItem('fd_access_token');
        //     //     localStorage.removeItem('fd_user');
        //     //     localStorage.removeItem('fd_refresh_token');
        //     //     localStorage.removeItem('fd_expires_in');
        //     //     this.errorMsg = cuid + " User does not have profile, please check with Admin.";
        //     // }
        // }).catch((error: any) =>{
        //     this.authError = true;
        //     localStorage.removeItem('fd_access_token');
        //     localStorage.removeItem('fd_user');
        //     localStorage.removeItem('fd_refresh_token');
        //     localStorage.removeItem('fd_expires_in');
        //     this.errorMsg = cuid + " User Not authorized. ";
        // });
    }).catch( (error: any) => {
    	this.authError = true;
        this.errorMsg = "Please enter valid cuid/password.";
    });
  }
    
  }
